---
- name: Copy k3s config file
  become: true
  template:
    src: ../templates/config.yaml
    dest: /etc/rancher/k3s/config.yaml
    mode: 0644

- name: Install K3s
  become: true
  shell:
    cmd: "INSTALL_K3S_SKIP_DOWNLOAD=true INSTALL_K3S_EXEC='server --server https://{{ hostvars['master1']['ansible_host'] }}:6443' ./install.sh"
    chdir: "{{ remote_edge_bundle_dir }}"
  ignore_errors: true
  async: 600
  poll: 5
  when: features.hardening is false

- name: Install K3s
  become: true
  shell:
    cmd: "INSTALL_K3S_SKIP_DOWNLOAD=true INSTALL_K3S_EXEC='server --server https://{{ hostvars['master1']['ansible_host'] }}:6443' ./install.sh -- server --protect-kernel-defaults=true --secrets-encryption=true --kube-apiserver-arg='audit-log-path=/var/lib/rancher/k3s/server/logs/audit.log' --kube-apiserver-arg='audit-policy-file=/var/lib/rancher/k3s/server/audit.yaml' --kube-apiserver-arg='audit-log-maxage=30' --kube-apiserver-arg='audit-log-maxbackup=10' --kube-apiserver-arg='audit-log-maxsize=100' --kube-apiserver-arg='request-timeout=300s' --kube-apiserver-arg='service-account-lookup=true' --kube-apiserver-arg='enable-admission-plugins=NodeRestriction,PodSecurityPolicy,NamespaceLifecycle,ServiceAccount' --kube-controller-manager-arg='terminated-pod-gc-threshold=10' --kube-controller-manager-arg='use-service-account-credentials=true' --kubelet-arg='streaming-connection-idle-timeout=5m' --kubelet-arg='make-iptables-util-chains=true'"
    chdir: "{{ remote_edge_bundle_dir }}"
  ignore_errors: true
  async: 600
  poll: 5
  when: features.hardening is true

# - name: Ensure k3s is running
#   become: true
#   ansible.builtin.systemd:
#     state: restarted
#     name: k3s

- name: Create .kube directory
  ansible.builtin.file:
    state: directory
    path: "/home/{{ ansible_user }}/.kube"

- name: Copy the kubeconfig to the .kube directory
  become: true
  ansible.builtin.copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "/home/{{ ansible_user }}/.kube/config"
    remote_src: true
    mode: 0644
